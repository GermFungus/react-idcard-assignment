{"ast":null,"code":"var _jsxFileName = \"/home/yass_kicker/Documents/ReactId/front-end/src/main-component/mainComponent.js\";\nimport React from \"react\";\nimport IdComponent from \"../id-component/id-component\";\nimport './main-component.css';\nexport default class MainComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.editData = (datName, index, data, cat) => {\n      if (datName === 'picture' && parseInt(cat) === 2) {\n        let temp = this.state.UserDataIncomplete;\n        temp[parseInt(index)][`${datName}`] = data;\n        let completeTemp = this.state.UserDataComplete;\n        completeTemp.unshift(temp[parseInt(index)]);\n        temp.splice(parseInt(index), 1);\n        this.setState({\n          UserDataComplete: completeTemp,\n          UserDataIncomplete: temp\n        });\n        console.log(this.state.UserDataComplete[0], this.state.UserDataIncomplete[0]);\n      } else {\n        if (cat === 1) {\n          console.log(data, index);\n          let temp = this.state.UserDataComplete;\n          temp[parseInt(index)][`${datName}`] = data;\n          this.setState({\n            UserDataComplete: temp\n          });\n        }\n\n        if (cat === 2) {\n          console.log(data, index);\n          let temp = this.state.UserDataIncomplete;\n          temp[parseInt(index)][`${datName}`] = data;\n          this.setState({\n            UserDataIncomplete: temp\n          });\n        }\n      }\n    };\n\n    this.renderOb = cat => {\n      if (cat === 1) {\n        if (this.state.UserDataComplete[0]) {\n          let tempDatatoShow = [];\n          let start = (this.state.currentPage - 1) * this.state.pageSize;\n          let end = start + this.state.pageSize;\n          let lastPage = this.state.UserDataComplete.length / this.state.pageSize;\n\n          for (let i = start; i < end; ++i) {\n            tempDatatoShow.push( /*#__PURE__*/React.createElement(IdComponent, {\n              key: i.toString(),\n              catagory: cat,\n              index: i,\n              editData: this.editData,\n              first: this.state.firstPage,\n              last: lastPage,\n              currentPage: this.state.currentPage,\n              name: this.state.UserDataComplete[i].name,\n              address: this.state.UserDataComplete[i].address,\n              email: this.state.UserDataComplete[i].email,\n              Dob: this.state.UserDataComplete[i].Dob,\n              cellNumber: this.state.UserDataComplete[i].cellNumber,\n              picture: this.state.UserDataComplete[i].picture,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }\n            }));\n          }\n\n          return tempDatatoShow;\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }\n          });\n        }\n      }\n\n      if (cat === 2) {\n        if (this.state.UserDataIncomplete[0]) {\n          let tempDatatoShow = [];\n          tempDatatoShow.push( /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 42\n            }\n          }, \"Count : \", this.UserDataIncomplete.length)));\n          let start = (this.state.currentPage2 - 1) * this.state.pageSize;\n          let end = start + this.state.pageSize;\n          let lastPage = this.state.UserDataIncomplete.length / this.state.pageSize;\n\n          for (let i = start; i < end; ++i) {\n            tempDatatoShow.push( /*#__PURE__*/React.createElement(IdComponent, {\n              key: i.toString() + '2',\n              catagory: cat,\n              index: i,\n              editData: this.editData,\n              first: this.state.firstPage,\n              last: lastPage,\n              currentPage: this.state.currentPage2,\n              name: this.state.UserDataIncomplete[i].name,\n              address: this.state.UserDataIncomplete[i].address,\n              email: this.state.UserDataIncomplete[i].email,\n              Dob: this.state.UserDataIncomplete[i].Dob,\n              cellNumber: this.state.UserDataIncomplete[i].cellNumber,\n              picture: this.state.UserDataIncomplete[i].picture,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }\n            }));\n          }\n\n          return tempDatatoShow;\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }\n          });\n        }\n      }\n    };\n\n    this.paginationshift = (dat, cat) => {\n      if (dat === '-1') {\n        if (cat === 1) {\n          let prevCurentPage = this.state.currentPage;\n          this.setState({\n            currentPage: prevCurentPage - 1\n          });\n        }\n\n        if (cat === 2) {\n          let prevCurentPage = this.state.currentPage2;\n          this.setState({\n            currentPage2: prevCurentPage - 1\n          });\n        }\n      } else if (dat === '+1') {\n        if (cat === 1) {\n          let prevCurentPage = this.state.currentPage;\n          this.setState({\n            currentPage: prevCurentPage + 1\n          });\n        }\n\n        if (cat === 2) {\n          let prevCurentPage = this.state.currentPage2;\n          this.setState({\n            currentPage2: prevCurentPage + 1\n          });\n        }\n      } else if (dat === '1') {\n        if (cat === 1) {\n          this.setState({\n            currentPage: 1\n          });\n        }\n\n        if (cat === 2) {\n          this.setState({\n            currentPage2: 1\n          });\n        }\n      } else if (dat === 'e') {\n        if (cat === 1) {\n          let lastPage = this.state.UserDataComplete.length / this.state.pageSize;\n          this.setState({\n            currentPage: lastPage\n          });\n        }\n\n        if (cat === 2) {\n          let lastPage = this.state.UserDataIncomplete.length / this.state.pageSize;\n          this.setState({\n            currentPage2: lastPage\n          });\n        }\n      }\n    };\n\n    this.renderPag = cat => {\n      if (cat === 1) {\n        //this.setState({lastpage : this.state.UserDataComplete.length/this.state.pageSize});\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pagination\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          onClick: () => {\n            this.paginationshift('1', 1);\n          },\n          className: \"PagButton\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }\n        }, \"First\"), /*#__PURE__*/React.createElement(\"div\", {\n          onClick: () => {\n            this.paginationshift('-1', 1);\n          },\n          className: \"PagButton\",\n          ref: prev => this.prev = prev,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }\n        }, \" Prev \"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"PagButton selected\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }\n        }, \" \", this.state.currentPage, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n          onClick: () => {\n            this.paginationshift('+1', 1);\n          },\n          className: \"PagButton\",\n          ref: next => this.next = next,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }\n        }, \" Next \"), /*#__PURE__*/React.createElement(\"div\", {\n          onClick: () => {\n            this.paginationshift('e', 1);\n          },\n          className: \"PagButton\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }\n        }, \"Last\"));\n      }\n\n      if (cat === 2) {\n        //this.setState({lastpage2 : this.state.UserDataIncomplete.length/this.state.pageSize});\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pagination\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          onClick: () => {\n            this.paginationshift('1', 2);\n          },\n          className: \"PagButton\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }\n        }, \"First\"), /*#__PURE__*/React.createElement(\"div\", {\n          onClick: () => {\n            this.paginationshift('-1', 2);\n          },\n          className: \"PagButton\",\n          ref: prev1 => this.prev1 = prev1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }\n        }, \" Prev \"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"PagButton selected\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }\n        }, \" \", this.state.currentPage2, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n          onClick: () => {\n            this.paginationshift('+1', 2);\n          },\n          className: \"PagButton\",\n          ref: next1 => this.next1 = next1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }\n        }, \" Next \"), /*#__PURE__*/React.createElement(\"div\", {\n          onClick: () => {\n            this.paginationshift('e', 2);\n          },\n          className: \"PagButton\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }\n        }, \"Last\"));\n      }\n    };\n\n    this.state = {\n      UserDataComplete: [],\n      UserDataIncomplete: [],\n      currentPage: 1,\n      firstPage: 1,\n      pageSize: 2,\n      lastpage: 0,\n      currentPage2: 1,\n      lastpage2: 0\n    };\n    this.renderOb = this.renderOb.bind(this);\n    this.renderPag = this.renderPag.bind(this);\n    this.paginationshift = this.paginationshift.bind(this);\n    this.editData = this.editData.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://randomuser.me/api/?page=1&results=100').then(res => res.json()).then(data => {\n      let finalData = [];\n\n      for (let i = 0; i < data.results.length / 2; ++i) {\n        let temp = {};\n        temp.name = data.results[i].name.title + \" \" + data.results[i].name.first + \" \" + data.results[i].name.last;\n        temp.address = data.results[i].location.street.number + \" \" + data.results[i].location.street.name + \" \" + data.results[i].location.city + \" \" + data.results[i].location.state;\n        temp.email = data.results[i].email;\n        temp.Dob = data.results[i].dob.date;\n        temp.cellNumber = data.results[i].cell;\n        temp.picture = data.results[i].picture.medium;\n        finalData.push(temp);\n      }\n\n      this.setState({\n        UserDataComplete: finalData\n      });\n      finalData = [];\n\n      for (let i = data.results.length / 2; i < data.results.length; ++i) {\n        let temp = {};\n        temp.name = data.results[i].name.title + \" \" + data.results[i].name.first + \" \" + data.results[i].name.last;\n        temp.address = data.results[i].location.street.number + \" \" + data.results[i].location.street.name + \" \" + data.results[i].location.city + \" \" + data.results[i].location.state;\n        temp.email = data.results[i].email;\n        temp.Dob = data.results[i].dob.date;\n        temp.cellNumber = data.results[i].cell;\n        temp.picture = '';\n        finalData.push(temp);\n      }\n\n      this.setState({\n        UserDataIncomplete: finalData\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"Id Cards\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"renderDiv\",\n      id: \"RenderDiv\",\n      ref: renderDiv => this.renderDiv = renderDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"complete sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 30\n      }\n    }, \"Complete Cards\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, this.renderOb(1)), this.renderPag(1)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"incomplete sub\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 30\n      }\n    }, \"Incomplete Cards\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, this.renderOb(2)), this.renderPag(2))));\n  }\n\n}","map":{"version":3,"sources":["/home/yass_kicker/Documents/ReactId/front-end/src/main-component/mainComponent.js"],"names":["React","IdComponent","MainComponent","Component","constructor","editData","datName","index","data","cat","parseInt","temp","state","UserDataIncomplete","completeTemp","UserDataComplete","unshift","splice","setState","console","log","renderOb","tempDatatoShow","start","currentPage","pageSize","end","lastPage","length","i","push","toString","firstPage","name","address","email","Dob","cellNumber","picture","currentPage2","paginationshift","dat","prevCurentPage","renderPag","prev","next","prev1","next1","lastpage","lastpage2","bind","componentDidMount","fetch","then","res","json","finalData","results","title","first","last","location","street","number","city","dob","date","cell","medium","render","renderDiv"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IdComponent from \"../id-component/id-component\"\nimport './main-component.css';\nexport default class MainComponent extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            UserDataComplete : [],\n            UserDataIncomplete : [],\n            currentPage : 1,\n            firstPage : 1,\n            pageSize : 2,\n            lastpage : 0,\n            currentPage2 : 1,\n            lastpage2 : 0\n        }\n        this.renderOb = this.renderOb.bind(this);\n        this.renderPag=this.renderPag.bind(this);\n        this.paginationshift=this.paginationshift.bind(this);\n        this.editData=this.editData.bind(this);\n    }\n\n    editData = (datName , index , data , cat)=>{\n        if((datName === 'picture') && (parseInt(cat) === 2)){\n            let temp = this.state.UserDataIncomplete;\n            temp[parseInt(index)][`${datName}`] = data;\n            let completeTemp = this.state.UserDataComplete;\n            completeTemp.unshift(temp[parseInt(index)]);\n            temp.splice(parseInt(index) , 1);\n            this.setState({UserDataComplete : completeTemp , UserDataIncomplete : temp});\n            console.log(this.state.UserDataComplete[0] , this.state.UserDataIncomplete[0]);\n        }\n        else\n        {\n            if(cat === 1){\n                console.log(data , index);\n                let temp = this.state.UserDataComplete;\n                temp[parseInt(index)][`${datName}`] = data;\n                this.setState({UserDataComplete : temp});\n            }\n            if(cat === 2){\n                console.log(data , index);\n                let temp = this.state.UserDataIncomplete;\n                temp[parseInt(index)][`${datName}`] = data;\n                this.setState({UserDataIncomplete : temp});\n                \n            }\n        }\n    }\n    componentDidMount(){\n        fetch('https://randomuser.me/api/?page=1&results=100').then(\n            res => res.json())\n            .then((data) => {\n                let finalData = [];\n                for(let i = 0 ; i < data.results.length/2 ; ++i){\n                    let temp = {};\n                    temp.name = data.results[i].name.title + \" \" + data.results[i].name.first + \" \" + data.results[i].name.last;\n                    temp.address = data.results[i].location.street.number + \" \" + data.results[i].location.street.name + \" \" + data.results[i].location.city + \" \" + data.results[i].location.state;\n                    temp.email = data.results[i].email;\n                    temp.Dob = data.results[i].dob.date;\n                    temp.cellNumber = data.results[i].cell;\n                    temp.picture =  data.results[i].picture.medium;\n                    finalData.push(temp);\n                }\n                this.setState({UserDataComplete : finalData});\n                finalData = [];\n                for(let i = data.results.length/2 ; i < data.results.length ; ++i){\n                    let temp = {};\n                    temp.name = data.results[i].name.title + \" \" + data.results[i].name.first + \" \" + data.results[i].name.last;\n                    temp.address = data.results[i].location.street.number + \" \" + data.results[i].location.street.name + \" \" + data.results[i].location.city + \" \" + data.results[i].location.state;\n                    temp.email = data.results[i].email;\n                    temp.Dob = data.results[i].dob.date;\n                    temp.cellNumber = data.results[i].cell;\n                    temp.picture = '';\n                    finalData.push(temp);\n                }\n                this.setState({UserDataIncomplete : finalData});\n            });\n    }\n    renderOb =  (cat) => {\n        if(cat === 1){\n            if(this.state.UserDataComplete[0]){\n                let tempDatatoShow = [];\n                let start = ((this.state.currentPage-1)*this.state.pageSize);\n                let end = start+this.state.pageSize;\n                let lastPage = this.state.UserDataComplete.length/this.state.pageSize\n                for(let i = start ; i < end ; ++i){\n                    tempDatatoShow.push(<IdComponent key={i.toString()}  catagory={cat} index={i} editData={this.editData} first={this.state.firstPage} last={lastPage} currentPage={this.state.currentPage} name={this.state.UserDataComplete[i].name} address={this.state.UserDataComplete[i].address} email={this.state.UserDataComplete[i].email} Dob={this.state.UserDataComplete[i].Dob} cellNumber={this.state.UserDataComplete[i].cellNumber} picture={this.state.UserDataComplete[i].picture} />)\n                }\n                return tempDatatoShow;\n            }\n            else {\n                return (<div></div>)\n            }\n        }\n        if(cat === 2){\n            if(this.state.UserDataIncomplete[0]){\n                let tempDatatoShow = [];\n                tempDatatoShow.push(<div><h3>Count : {this.UserDataIncomplete.length}</h3></div>)\n                let start = ((this.state.currentPage2-1)*this.state.pageSize);\n                let end = start+this.state.pageSize;\n                let lastPage = this.state.UserDataIncomplete.length/this.state.pageSize\n                for(let i = start ; i < end ; ++i){\n                    tempDatatoShow.push(<IdComponent key={i.toString()+'2'}  catagory={cat} index={i} editData={this.editData} first={this.state.firstPage} last={lastPage} currentPage={this.state.currentPage2} name={this.state.UserDataIncomplete[i].name} address={this.state.UserDataIncomplete[i].address} email={this.state.UserDataIncomplete[i].email} Dob={this.state.UserDataIncomplete[i].Dob} cellNumber={this.state.UserDataIncomplete[i].cellNumber} picture={this.state.UserDataIncomplete[i].picture} />)\n                }\n                return tempDatatoShow;\n            }\n            else {\n                return (<div></div>)\n            }\n\n        }\n    }\n    paginationshift = (dat , cat)=>{\n        if(dat === '-1'){\n            if(cat === 1){\n                let prevCurentPage = this.state.currentPage;\n                this.setState({currentPage : prevCurentPage-1});\n            }\n            if(cat === 2){\n                let prevCurentPage = this.state.currentPage2;\n                this.setState({currentPage2 : prevCurentPage-1});\n            }\n        }\n        else if(dat === '+1'){\n            if(cat === 1){\n                let prevCurentPage = this.state.currentPage;\n                this.setState({currentPage : prevCurentPage+1});\n            }\n            if(cat === 2){\n                let prevCurentPage = this.state.currentPage2;\n                this.setState({currentPage2 : prevCurentPage+1});\n            }\n        }\n        else if(dat === '1'){\n            if(cat === 1){\n                this.setState({currentPage : 1});\n            }\n            if(cat === 2){\n                this.setState({currentPage2 : 1});\n            }\n        }\n        else if(dat === 'e'){\n            if(cat === 1){\n                let lastPage = this.state.UserDataComplete.length/this.state.pageSize;\n                this.setState({currentPage : lastPage});\n            }\n            if(cat === 2){\n                let lastPage = this.state.UserDataIncomplete.length/this.state.pageSize;\n                this.setState({currentPage2 : lastPage});\n            }\n        }\n    }\n    renderPag = (cat)=>{\n        if(cat === 1){\n            //this.setState({lastpage : this.state.UserDataComplete.length/this.state.pageSize});\n            return (\n                <div className='pagination'>\n                    <div onClick={() => {this.paginationshift('1' , 1)}} className=\"PagButton\">First</div>\n                    <div onClick={()=>{this.paginationshift('-1' , 1)}} className=\"PagButton\" ref={prev => this.prev = prev} > Prev </div>\n                    <div className=\"PagButton selected\"> {this.state.currentPage} </div>\n                    <div onClick={()=>{this.paginationshift('+1' , 1)}} className=\"PagButton\" ref={next => this.next = next} > Next </div>\n                    <div onClick={()=>{this.paginationshift('e' , 1)}} className=\"PagButton\">Last</div>\n                </div>\n            )\n        }\n        if(cat === 2){\n            //this.setState({lastpage2 : this.state.UserDataIncomplete.length/this.state.pageSize});\n            return (\n                <div className='pagination'>\n                    <div onClick={() => {this.paginationshift('1' , 2)}} className=\"PagButton\">First</div>\n                    <div onClick={()=>{this.paginationshift('-1' , 2)}} className=\"PagButton\" ref={prev1 => this.prev1 = prev1}> Prev </div>\n                    <div className=\"PagButton selected\"> {this.state.currentPage2} </div>\n                    <div onClick={()=>{this.paginationshift('+1' , 2)}} className=\"PagButton\" ref={next1 => this.next1 = next1} > Next </div>\n                    <div onClick={()=>{this.paginationshift('e' , 2)}} className=\"PagButton\">Last</div>\n                </div>\n            )\n        }\n    }\n    render(){\n        return(\n            <div>\n                <div className='bar'>Id Cards</div>\n                <div className='headerDiv'>\n                    \n                </div>\n                <div className='renderDiv' id='RenderDiv' ref={renderDiv => this.renderDiv = renderDiv}>\n                    <div className='complete sub'>\n                        <div><h3>Complete Cards</h3></div>\n                        <ul>\n                        {this.renderOb(1)}\n                        </ul>\n                        {this.renderPag(1)}\n                    </div>\n                    <div className='incomplete sub'>\n                        <div><h3>Incomplete Cards</h3></div>\n                        <ul>\n                        {this.renderOb(2)}\n                        </ul>\n                        {this.renderPag(2)}\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}