{"ast":null,"code":"var _jsxFileName = \"/home/yass_kicker/Documents/ReactId/front-end/src/main-component/mainComponent.js\";\nimport React from \"react\";\nimport IdComponent from \"../id-component/id-component\";\nimport './main-component.css';\nexport default class MainComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      UserDataComplete: [],\n      UserDataIncomplete: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://randomuser.me/api/?page=1&results=100').then(res => res.json()).then(data => {\n      let finalData = [];\n\n      for (let i = 0; i < data.results.length / 2; ++i) {\n        let temp = {};\n        temp.name = data.results[i].name.title + \" \" + data.results[i].name.first + \" \" + data.results[i].name.last;\n        temp.address = data.results[i].location.street.number + \" \" + data.results[i].location.street.name + \" \" + data.results[i].location.city + \" \" + data.results[i].location.state;\n        temp.email = data.results[i].email;\n        temp.dob = data.results[i].dob;\n        temp.cellNumber = data.results.cell;\n        temp.picture = data.results[i].picture.thumbnail;\n        finalData.push(temp);\n      }\n\n      this.setState({\n        UserDataComplete: finalData\n      });\n      console.log(this.state.UserDataComplete[6]);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(IdComponent, {\n      name: this.state.UserDataComplete[0].name,\n      address: this.state.UserDataComplete[0].address,\n      email: this.state.UserDataComplete[0].email,\n      dob: this.state.UserDataComplete[0].dob,\n      cellNumber: this.state.UserDataComplete[0].cellNumber,\n      picture: this.state.UserDataComplete[0].picture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/yass_kicker/Documents/ReactId/front-end/src/main-component/mainComponent.js"],"names":["React","IdComponent","MainComponent","Component","constructor","state","UserDataComplete","UserDataIncomplete","componentDidMount","fetch","then","res","json","data","finalData","i","results","length","temp","name","title","first","last","address","location","street","number","city","email","dob","cellNumber","cell","picture","thumbnail","push","setState","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport IdComponent from \"../id-component/id-component\"\nimport './main-component.css';\nexport default class MainComponent extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            UserDataComplete : [],\n            UserDataIncomplete : [],\n        }\n    }\n    componentDidMount(){\n        fetch('https://randomuser.me/api/?page=1&results=100').then(\n            res => res.json())\n            .then((data) => {\n                let finalData = [];\n                for(let i = 0 ; i < data.results.length/2 ; ++i){\n                    let temp = {};\n                    temp.name = data.results[i].name.title + \" \" + data.results[i].name.first + \" \" + data.results[i].name.last;\n                    temp.address = data.results[i].location.street.number + \" \" + data.results[i].location.street.name + \" \" + data.results[i].location.city + \" \" + data.results[i].location.state;\n                    temp.email = data.results[i].email;\n                    temp.dob = data.results[i].dob;\n                    temp.cellNumber = data.results.cell;\n                    temp.picture =  data.results[i].picture.thumbnail;\n                    finalData.push(temp);\n                }\n                this.setState({UserDataComplete : finalData});\n                console.log(this.state.UserDataComplete[6]);\n            })\n    }\n    render(){\n        return(\n                <IdComponent name={this.state.UserDataComplete[0].name} address={this.state.UserDataComplete[0].address} email={this.state.UserDataComplete[0].email} dob={this.state.UserDataComplete[0].dob} cellNumber={this.state.UserDataComplete[0].cellNumber} picture={this.state.UserDataComplete[0].picture} />\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}